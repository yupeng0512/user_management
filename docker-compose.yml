services:
  # MongoDB 数据库
  mongodb:
    image: mongo:7.0
    container_name: user_management_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: user_management
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - user_management_network

  # 后端 API 服务
  backend:
    image: user_management-backend
    container_name: user_management_backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/user_management?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 7d
      JWT_REFRESH_EXPIRES_IN: 30d
      CORS_ORIGIN: http://localhost:3000
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
    ports:
      - "3001:3001"
    depends_on:
      - mongodb
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - user_management_network
    command: npm run dev

  # 前端应用
  frontend:
    image: user_management-frontend
    container_name: user_management_frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_BASE_URL: http://localhost:3001/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - user_management_network
    command: npm start

volumes:
  mongodb_data:

networks:
  user_management_network:
    driver: bridge
